{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_Learning\\\\new-app\\\\src\\\\App.js\";\nimport React, { Component } from \"react\"; //import logo from \"./logo.svg\";\n\nimport Navbar from \"./components/navbar\";\nimport \"./App.css\";\nimport Counters from \"./components/counters\";\nimport Login from \"./components/login\";\nimport { BrowserRouter as Router, Switch, Route, IndexRoute, Redirect } from \"react-router-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport { combineReducers } from \"redux\";\nimport { sessionReducer } from \"redux-react-session\";\nimport { createStore } from \"redux\";\nimport { sessionService } from \"redux-react-session\";\nconst reducers = {\n  // ... your other reducers here ...\n  session: sessionReducer\n};\nconst reducer = combineReducers(reducers);\nconst store = createStore(reducer);\nsessionService.initSessionService(store);\n\nconst validateSession = session => {\n  // check if your session is still valid\n  return true;\n};\n\nconst options = {\n  refreshOnCheckAuth: true,\n  redirectPath: \"/home\",\n  driver: \"COOKIES\",\n  validateSession\n};\nsessionService.initSessionService(store, options).then(() => console.log(\"Redux React Session is ready and a session was refreshed from your storage\")).catch(() => console.log(\"Redux React Session is ready and there is no session in your storage\"));\n\nclass App extends Component {\n  render() {\n    console.log(\"App rendered\");\n    return /*#__PURE__*/React.createElement(HashRouter, {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: Login,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/counters\",\n      component: Counters,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/React_Learning/new-app/src/App.js"],"names":["React","Component","Navbar","Counters","Login","BrowserRouter","Router","Switch","Route","IndexRoute","Redirect","HashRouter","combineReducers","sessionReducer","createStore","sessionService","reducers","session","reducer","store","initSessionService","validateSession","options","refreshOnCheckAuth","redirectPath","driver","then","console","log","catch","App","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,MAFF,EAGEC,KAHF,EAIEC,UAJF,EAKEC,QALF,QAMO,kBANP;AAOA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,eAAT,QAAgC,OAAhC;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,SAASC,cAAT,QAA+B,qBAA/B;AAEA,MAAMC,QAAQ,GAAG;AACf;AACAC,EAAAA,OAAO,EAAEJ;AAFM,CAAjB;AAIA,MAAMK,OAAO,GAAGN,eAAe,CAACI,QAAD,CAA/B;AAEA,MAAMG,KAAK,GAAGL,WAAW,CAACI,OAAD,CAAzB;AAEAH,cAAc,CAACK,kBAAf,CAAkCD,KAAlC;;AACA,MAAME,eAAe,GAAIJ,OAAD,IAAa;AACnC;AACA,SAAO,IAAP;AACD,CAHD;;AAIA,MAAMK,OAAO,GAAG;AACdC,EAAAA,kBAAkB,EAAE,IADN;AAEdC,EAAAA,YAAY,EAAE,OAFA;AAGdC,EAAAA,MAAM,EAAE,SAHM;AAIdJ,EAAAA;AAJc,CAAhB;AAOAN,cAAc,CACXK,kBADH,CACsBD,KADtB,EAC6BG,OAD7B,EAEGI,IAFH,CAEQ,MACJC,OAAO,CAACC,GAAR,CACE,4EADF,CAHJ,EAOGC,KAPH,CAOS,MACLF,OAAO,CAACC,GAAR,CACE,sEADF,CARJ;;AAYA,MAAME,GAAN,SAAkB7B,SAAlB,CAA4B;AAC1B8B,EAAAA,MAAM,GAAG;AACPJ,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,wBACE,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAC,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAExB,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,WAAlB;AAA8B,MAAA,SAAS,EAAED,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CADF;AAQD;;AAXyB;;AAc5B,eAAe2B,GAAf","sourcesContent":["import React, { Component } from \"react\";\n//import logo from \"./logo.svg\";\nimport Navbar from \"./components/navbar\";\nimport \"./App.css\";\nimport Counters from \"./components/counters\";\nimport Login from \"./components/login\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  IndexRoute,\n  Redirect,\n} from \"react-router-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport { combineReducers } from \"redux\";\nimport { sessionReducer } from \"redux-react-session\";\nimport { createStore } from \"redux\";\nimport { sessionService } from \"redux-react-session\";\n\nconst reducers = {\n  // ... your other reducers here ...\n  session: sessionReducer,\n};\nconst reducer = combineReducers(reducers);\n\nconst store = createStore(reducer);\n\nsessionService.initSessionService(store);\nconst validateSession = (session) => {\n  // check if your session is still valid\n  return true;\n};\nconst options = {\n  refreshOnCheckAuth: true,\n  redirectPath: \"/home\",\n  driver: \"COOKIES\",\n  validateSession,\n};\n\nsessionService\n  .initSessionService(store, options)\n  .then(() =>\n    console.log(\n      \"Redux React Session is ready and a session was refreshed from your storage\"\n    )\n  )\n  .catch(() =>\n    console.log(\n      \"Redux React Session is ready and there is no session in your storage\"\n    )\n  );\nclass App extends Component {\n  render() {\n    console.log(\"App rendered\");\n    return (\n      <HashRouter className=\"container\">\n        <Switch>\n          <Route exact path=\"/\" component={Login} />\n          <Route exact path=\"/counters\" component={Counters} />\n        </Switch>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}