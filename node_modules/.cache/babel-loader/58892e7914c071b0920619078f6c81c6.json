{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_Learning\\\\new-app\\\\src\\\\components\\\\login.js\";\nimport React, { Component } from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { Button, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nimport \"./login.css\";\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: \"\",\n      password: \"\"\n    };\n\n    this.handleLogin = () => {\n      this.props.history.push(\"/counters\");\n    };\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const {\n      email,\n      password\n    } = this.state;\n    const validEmailRegex = RegExp(/^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/);\n\n    if (!validEmailRegex.test(email)) {\n      alert(\"Type a valid email id\");\n    } else if (password.length < 5) {\n      alert(\"Password should be of atleast 5 characters length\");\n    } else if (security.length < 1) {\n      alert(\"Enter Security answer to login\");\n    } else {\n      axios.post(\"/users/login\", {\n        email: this.state.email,\n        password: this.state.password,\n        security: this.state.security\n      }).then(res => {\n        if (res.data) {\n          localStorage.setItem(\"access_token\", JSON.stringify(res.data));\n          localStorage.setItem(\"email\", email);\n          this.props.history.push(`/Profile`);\n        } else {\n          alert(\"Register to sign in\");\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      controlId: \"email\",\n      bsSize: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ControlLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(FormControl, {\n      autoFocus: true,\n      type: \"email\",\n      value: this.state.email,\n      onChange: (event, newValue) => this.setState({\n        email: newValue\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      controlId: \"password\",\n      bsSize: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ControlLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(FormControl, {\n      value: this.state.password,\n      getValue: value => this.getLoginData(value, \"password\"),\n      onChange: (event, newValue) => this.setState({\n        password: newValue\n      }),\n      type: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      block: true,\n      bsSize: \"large\",\n      type: \"submit\",\n      disabled: !this.validateForm,\n      onClick: this.handleLogin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }, \"Login\")));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["D:/React_Learning/new-app/src/components/login.js"],"names":["React","Component","Redirect","Route","Button","FormGroup","FormControl","ControlLabel","Login","state","email","password","handleLogin","props","history","push","onSubmit","e","preventDefault","validEmailRegex","RegExp","test","alert","length","security","axios","post","then","res","data","localStorage","setItem","JSON","stringify","catch","err","console","log","render","handleSubmit","event","newValue","setState","value","getLoginData","validateForm"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { Button, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\r\nimport \"./login.css\";\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const { email, password } = this.state;\r\n    const validEmailRegex = RegExp(\r\n      /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\r\n    );\r\n    if (!validEmailRegex.test(email)) {\r\n      alert(\"Type a valid email id\");\r\n    } else if (password.length < 5) {\r\n      alert(\"Password should be of atleast 5 characters length\");\r\n    } else if (security.length < 1) {\r\n      alert(\"Enter Security answer to login\");\r\n    } else {\r\n      axios\r\n        .post(\"/users/login\", {\r\n          email: this.state.email,\r\n          password: this.state.password,\r\n          security: this.state.security,\r\n        })\r\n        .then((res) => {\r\n          if (res.data) {\r\n            localStorage.setItem(\"access_token\", JSON.stringify(res.data));\r\n            localStorage.setItem(\"email\", email);\r\n            this.props.history.push(`/Profile`);\r\n          } else {\r\n            alert(\"Register to sign in\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  }\r\n  handleLogin = () => {\r\n    this.props.history.push(\"/counters\");\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"Login\">\r\n        <form onSubmit={this.handleSubmit}>\r\n          <FormGroup controlId=\"email\" bsSize=\"large\">\r\n            <ControlLabel>Email</ControlLabel>\r\n            <FormControl\r\n              autoFocus\r\n              type=\"email\"\r\n              value={this.state.email}\r\n              onChange={(event, newValue) => this.setState({ email: newValue })}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup controlId=\"password\" bsSize=\"large\">\r\n            <ControlLabel>Password</ControlLabel>\r\n            <FormControl\r\n              value={this.state.password}\r\n              getValue={(value) => this.getLoginData(value, \"password\")}\r\n              onChange={(event, newValue) =>\r\n                this.setState({ password: newValue })\r\n              }\r\n              type=\"password\"\r\n            />\r\n          </FormGroup>\r\n          <Button\r\n            block\r\n            bsSize=\"large\"\r\n            type=\"submit\"\r\n            disabled={!this.validateForm}\r\n            onClick={this.handleLogin}\r\n          >\r\n            Login\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}