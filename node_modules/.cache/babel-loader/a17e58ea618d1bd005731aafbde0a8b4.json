{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_Learning\\\\new-app\\\\src\\\\components\\\\counters.jsx\";\nimport React, { Component } from \"react\";\nimport Counter from \"./counter\";\n\nclass counters extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      counters: [{\n        id: 1,\n        value: 0\n      }, {\n        id: 2,\n        value: 0\n      }, {\n        id: 3,\n        value: 0\n      }, {\n        id: 4,\n        value: 0\n      }]\n    };\n\n    this.handleIncrement = counter => {\n      console.log(\"handle increment\");\n    };\n\n    this.handleReset = () => {\n      const counters = this.state.counters.map(c => c.value = 1);\n      this.setState({\n        counters\n      });\n    };\n\n    this.handleDelete = counterID => {\n      const counters = this.state.counters.filter(c => c.id !== counterID);\n      this.setState({\n        counters\n      });\n      console.log(\"delete called\");\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleReset,\n      className: \"btn btn-primary btn-sm m-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }, \"Reset\"), this.state.counters.map(counter => /*#__PURE__*/React.createElement(Counter, {\n      key: counter.id,\n      onDelete: this.handleDelete,\n      onIncrement: this.handleIncrement,\n      counter: counter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default counters;","map":{"version":3,"sources":["D:/React_Learning/new-app/src/components/counters.jsx"],"names":["React","Component","Counter","counters","state","id","value","handleIncrement","counter","console","log","handleReset","map","c","setState","handleDelete","counterID","filter","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC/BG,KAD+B,GACvB;AACND,MAAAA,QAAQ,EAAE,CACR;AAAEE,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OADQ,EAER;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OAFQ,EAGR;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OAHQ,EAIR;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OAJQ;AADJ,KADuB;;AAAA,SAU/BC,eAV+B,GAUZC,OAAD,IAAa;AAC7BC,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACD,KAZ8B;;AAAA,SAc/BC,WAd+B,GAcjB,MAAM;AAClB,YAAMR,QAAQ,GAAG,KAAKC,KAAL,CAAWD,QAAX,CAAoBS,GAApB,CAAyBC,CAAD,IAAQA,CAAC,CAACP,KAAF,GAAU,CAA1C,CAAjB;AACA,WAAKQ,QAAL,CAAc;AAAEX,QAAAA;AAAF,OAAd;AACD,KAjB8B;;AAAA,SAkB/BY,YAlB+B,GAkBfC,SAAD,IAAe;AAC5B,YAAMb,QAAQ,GAAG,KAAKC,KAAL,CAAWD,QAAX,CAAoBc,MAApB,CAA4BJ,CAAD,IAAOA,CAAC,CAACR,EAAF,KAASW,SAA3C,CAAjB;AACA,WAAKF,QAAL,CAAc;AAAEX,QAAAA;AAAF,OAAd;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACD,KAtB8B;AAAA;;AAuB/BQ,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,OAAO,EAAE,KAAKP,WADhB;AAEE,MAAA,SAAS,EAAC,4BAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAOG,KAAKP,KAAL,CAAWD,QAAX,CAAoBS,GAApB,CAAyBJ,OAAD,iBACvB,oBAAC,OAAD;AACE,MAAA,GAAG,EAAEA,OAAO,CAACH,EADf;AAEE,MAAA,QAAQ,EAAE,KAAKU,YAFjB;AAGE,MAAA,WAAW,EAAE,KAAKR,eAHpB;AAIE,MAAA,OAAO,EAAEC,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAPH,CADF;AAkBD;;AA1C8B;;AA6CjC,eAAeL,QAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport Counter from \"./counter\";\r\n\r\nclass counters extends Component {\r\n  state = {\r\n    counters: [\r\n      { id: 1, value: 0 },\r\n      { id: 2, value: 0 },\r\n      { id: 3, value: 0 },\r\n      { id: 4, value: 0 },\r\n    ],\r\n  };\r\n\r\n  handleIncrement = (counter) => {\r\n    console.log(\"handle increment\");\r\n  };\r\n\r\n  handleReset = () => {\r\n    const counters = this.state.counters.map((c) => (c.value = 1));\r\n    this.setState({ counters });\r\n  };\r\n  handleDelete = (counterID) => {\r\n    const counters = this.state.counters.filter((c) => c.id !== counterID);\r\n    this.setState({ counters });\r\n    console.log(\"delete called\");\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button\r\n          onClick={this.handleReset}\r\n          className=\"btn btn-primary btn-sm m-2\"\r\n        >\r\n          Reset\r\n        </button>\r\n        {this.state.counters.map((counter) => (\r\n          <Counter\r\n            key={counter.id}\r\n            onDelete={this.handleDelete}\r\n            onIncrement={this.handleIncrement}\r\n            counter={counter}\r\n          ></Counter>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default counters;\r\n"]},"metadata":{},"sourceType":"module"}