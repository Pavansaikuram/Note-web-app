{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_Learning\\\\new-app\\\\src\\\\components\\\\counter.jsx\";\nimport React, { Component } from \"react\";\n\nclass Counter extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value: this.props.value // tags: [\"tag1\", \"tag2\"],\n\n    };\n  }\n\n  //   constructor() {\n  //     super();\n  //     this.handleIncrement = this.handleIncrement.bind(this);\n  //   }\n  handleIncrement(product) {\n    this.setState({\n      value: this.state.value + 1\n    });\n    console.log(product);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: this.getBadge(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }, this.formatCount()), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.handleIncrement({\n        id: 1\n      }),\n      className: \"btn btn-secondary btn-sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }, \"increment\"));\n  }\n\n  getBadge() {\n    let classes = \"badge m-2 badge-\";\n    classes += this.state.value === 0 ? \"warning\" : \"primary\";\n    return classes;\n  }\n\n  formatCount() {\n    const {\n      value: count\n    } = this.state;\n    return count === 0 ? \"zero\" : count;\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["D:/React_Learning/new-app/src/components/counter.jsx"],"names":["React","Component","Counter","state","value","props","handleIncrement","product","setState","console","log","render","getBadge","formatCount","id","classes","count"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC9BE,KAD8B,GACtB;AACNC,MAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWD,KADZ,CAEN;;AAFM,KADsB;AAAA;;AAM9B;AACA;AACA;AACA;AAEAE,EAAAA,eAAe,CAACC,OAAD,EAAU;AACvB,SAAKC,QAAL,CAAc;AAAEJ,MAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,GAAmB;AAA5B,KAAd;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACD;;AAEDI,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,SAAS,EAAE,KAAKC,QAAL,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmC,KAAKC,WAAL,EAAnC,CADF,eAEE;AACE,MAAA,OAAO,EAAE,MAAM,KAAKP,eAAL,CAAqB;AAAEQ,QAAAA,EAAE,EAAE;AAAN,OAArB,CADjB;AAEE,MAAA,SAAS,EAAC,0BAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,CADF;AAgBD;;AAEDF,EAAAA,QAAQ,GAAG;AACT,QAAIG,OAAO,GAAG,kBAAd;AACAA,IAAAA,OAAO,IAAI,KAAKZ,KAAL,CAAWC,KAAX,KAAqB,CAArB,GAAyB,SAAzB,GAAqC,SAAhD;AACA,WAAOW,OAAP;AACD;;AAEDF,EAAAA,WAAW,GAAG;AACZ,UAAM;AAAET,MAAAA,KAAK,EAAEY;AAAT,QAAmB,KAAKb,KAA9B;AACA,WAAOa,KAAK,KAAK,CAAV,GAAc,MAAd,GAAuBA,KAA9B;AACD;;AA5C6B;;AA+ChC,eAAed,OAAf","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Counter extends Component {\r\n  state = {\r\n    value: this.props.value,\r\n    // tags: [\"tag1\", \"tag2\"],\r\n  };\r\n\r\n  //   constructor() {\r\n  //     super();\r\n  //     this.handleIncrement = this.handleIncrement.bind(this);\r\n  //   }\r\n\r\n  handleIncrement(product) {\r\n    this.setState({ value: this.state.value + 1 });\r\n    console.log(product);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <span className={this.getBadge()}>{this.formatCount()}</span>\r\n        <button\r\n          onClick={() => this.handleIncrement({ id: 1 })}\r\n          className=\"btn btn-secondary btn-sm\"\r\n        >\r\n          increment\r\n        </button>\r\n        {/* <ul>\r\n          {this.state.tags.map((tag) => (\r\n            <li key={tag}>{tag}</li>\r\n          ))}\r\n        </ul> */}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  getBadge() {\r\n    let classes = \"badge m-2 badge-\";\r\n    classes += this.state.value === 0 ? \"warning\" : \"primary\";\r\n    return classes;\r\n  }\r\n\r\n  formatCount() {\r\n    const { value: count } = this.state;\r\n    return count === 0 ? \"zero\" : count;\r\n  }\r\n}\r\n\r\nexport default Counter;\r\n"]},"metadata":{},"sourceType":"module"}