{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_Learning\\\\new-app\\\\src\\\\components\\\\counter.jsx\";\nimport React, { Component } from \"react\";\n\nclass Counter extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      count: 0,\n      tags: [\"tag1\", \"tag2\"]\n    };\n\n    this.handleIncrement = () => {\n      this.setState({\n        count: this.setState.count + 1\n      });\n      console.log(\"clicked\", this);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: this.getBadge(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }, this.formatCount()), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleIncrement,\n      className: \"btn btn-secondary btn-sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }, \"increment\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, this.state.tags.map(tag => /*#__PURE__*/React.createElement(\"li\", {\n      key: tag,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }, tag))));\n  }\n\n  getBadge() {\n    let classes = \"badge m-2 badge-\";\n    classes += this.state.count === 0 ? \"warning\" : \"primary\";\n    return classes;\n  }\n\n  formatCount() {\n    const {\n      count\n    } = this.state;\n    return count === 0 ? \"zero\" : count;\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["D:/React_Learning/new-app/src/components/counter.jsx"],"names":["React","Component","Counter","state","count","tags","handleIncrement","setState","console","log","render","getBadge","formatCount","map","tag","classes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC9BE,KAD8B,GACtB;AACNC,MAAAA,KAAK,EAAE,CADD;AAENC,MAAAA,IAAI,EAAE,CAAC,MAAD,EAAS,MAAT;AAFA,KADsB;;AAAA,SAW9BC,eAX8B,GAWZ,MAAM;AACtB,WAAKC,QAAL,CAAc;AAAEH,QAAAA,KAAK,EAAE,KAAKG,QAAL,CAAcH,KAAd,GAAsB;AAA/B,OAAd;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuB,IAAvB;AACD,KAd6B;AAAA;;AAgB9BC,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,SAAS,EAAE,KAAKC,QAAL,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmC,KAAKC,WAAL,EAAnC,CADF,eAEE;AACE,MAAA,OAAO,EAAE,KAAKN,eADhB;AAEE,MAAA,SAAS,EAAC,0BAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKH,KAAL,CAAWE,IAAX,CAAgBQ,GAAhB,CAAqBC,GAAD,iBACnB;AAAI,MAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAeA,GAAf,CADD,CADH,CARF,CADF;AAgBD;;AAEDH,EAAAA,QAAQ,GAAG;AACT,QAAII,OAAO,GAAG,kBAAd;AACAA,IAAAA,OAAO,IAAI,KAAKZ,KAAL,CAAWC,KAAX,KAAqB,CAArB,GAAyB,SAAzB,GAAqC,SAAhD;AACA,WAAOW,OAAP;AACD;;AAEDH,EAAAA,WAAW,GAAG;AACZ,UAAM;AAAER,MAAAA;AAAF,QAAY,KAAKD,KAAvB;AACA,WAAOC,KAAK,KAAK,CAAV,GAAc,MAAd,GAAuBA,KAA9B;AACD;;AA5C6B;;AA+ChC,eAAeF,OAAf","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Counter extends Component {\r\n  state = {\r\n    count: 0,\r\n    tags: [\"tag1\", \"tag2\"],\r\n  };\r\n\r\n  //   constructor() {\r\n  //     super();\r\n  //     this.handleIncrement = this.handleIncrement.bind(this);\r\n  //   }\r\n\r\n  handleIncrement = () => {\r\n    this.setState({ count: this.setState.count + 1 });\r\n    console.log(\"clicked\", this);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <span className={this.getBadge()}>{this.formatCount()}</span>\r\n        <button\r\n          onClick={this.handleIncrement}\r\n          className=\"btn btn-secondary btn-sm\"\r\n        >\r\n          increment\r\n        </button>\r\n        <ul>\r\n          {this.state.tags.map((tag) => (\r\n            <li key={tag}>{tag}</li>\r\n          ))}\r\n        </ul>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  getBadge() {\r\n    let classes = \"badge m-2 badge-\";\r\n    classes += this.state.count === 0 ? \"warning\" : \"primary\";\r\n    return classes;\r\n  }\r\n\r\n  formatCount() {\r\n    const { count } = this.state;\r\n    return count === 0 ? \"zero\" : count;\r\n  }\r\n}\r\n\r\nexport default Counter;\r\n"]},"metadata":{},"sourceType":"module"}